// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: game_service.proto

package gameservice

import (
	"context"

	"game/pb/protoc-gen-go"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = protoc_gen_go.Request
	Response = protoc_gen_go.Response

	GameService interface {
		//
		HandlerName(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultGameService struct {
		cli zrpc.Client
	}
)

func NewGameService(cli zrpc.Client) GameService {
	return &defaultGameService{
		cli: cli,
	}
}

func (m *defaultGameService) HandlerName(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := protoc_gen_go.NewGameServiceClient(m.cli.Conn())
	return client.HandlerName(ctx, in, opts...)
}
